-- ---------------------------------------
--  MAKE AND QUERY A TABLE --
-- ---------------------------------------

-- make a table
CREATE TABLE Persons (
    PersonID int NOT NULL AUTO_INCREMENT,
    LastName varchar(255),
    FirstName varchar(255),
    Address varchar(255),
    City varchar(255),
    PRIMARY KEY(PersonID)
);

-- DROP TABLE Persons;

ALTER TABLE Persons
ADD PhoneNumber varchar(255);
-- why is phone number not an int?

DESCRIBE Persons;


-- add a record/row to the table 
-- Can I have items 2,4,5?
INSERT INTO Persons 
	(LastName, FirstName)
VALUES 
	('Erichsfden', 'Tomdf'),
    ('Erichsfden', 'Tomdf', 'Skagen 21 Stavanger 4006', 'Oslo'),
	('Eriadfchsen', 'Tom', 'Skdfdfagen 21 Stavanger 4006', 'Osdfdflo');

-- DELETE FROM Persons WHERE FirstName='Tomdf';
DELETE FROM Persons WHERE PersonID = 16;


-- Not a very good way of using update:
UPDATE Persons 												
SET FirstName = 'I JUNST CHANGED THIS WOOOOOOOOOOOOOOO'			-- Frist you say what you want changed
WHERE LastName = 'Erichsfden';									-- THEN you say where to change it

-- This IS a good way of using update
UPDATE Persons 												
SET FirstName = 'back to normal'			-- Frist you say what you want changed
WHERE PersonID = 15;						-- THEN you say where to change it

-- This IS a good way of using update
UPDATE Persons 												
SET PhoneNumber = '00789123456'			-- Frist you say what you want changed
WHERE PersonID = 17;						-- THEN you say where to change it


SELECT * FROM Persons;



-- Persons table
CREATE TABLE Persons (
    PersonID int NOT NULL AUTO_INCREMENT,
    LastName varchar(255),
    FirstName varchar(255),
    Address varchar(255),
    City varchar(255),
    PRIMARY KEY(PersonID)
);



-- ----------------------------------------
-- ONE to MANY RELATIONSHP --
-- ----------------------------------------

ALTER TABLE Persons DROP COLUMN City;

SELECT * FROM Persons;

-- ONE City to MANY Persons
CREATE TABLE Cities (
	CityID int NOT NULL AUTO_INCREMENT,
	CityName varchar(255),
    PRIMARY KEY(CityID)
);

INSERT INTO Cities
	(CityName)
VALUES
	('London'),
    ('Paris');

-- Add CityID to implement a ONE to MANY relationship
ALTER TABLE Persons ADD COLUMN CityID int;

SELECT * FROM Cities;

UPDATE Persons 												
SET CityID = 2			-- Frist you say what you want changed
WHERE LastName = 'Eriadfchsen';	-- THEN you say where to change it


SELECT Persons.LastName, Persons.FirstName, Cities.CityName
FROM Persons
INNER JOIN Cities
ON Persons.CityID = Cities.CityID;







-- ------------------------------------------
-- MANY to MANY RELATIONSHP --
-- ------------------------------------------

-- This is an edition of a title (not the physical book) 
CREATE TABLE BookTitles (  -- this is a book that can have MANY copies 
	BookID int NOT NULL AUTO_INCREMENT,
    Genre ENUM('period drama', 'fiction', 'sci-fi', 'romance', 'cooking', 'horror'), 
    Price decimal(10,2),  -- each of these is 0.1 mm
    ISBN varchar(255),
    BookDescription TEXT,
    PRIMARY KEY(BookID)
);

ALTER TABLE BookTitles ADD COLUMN Title varchar(255);

INSERT INTO BookTitles
	(Genre, Price, ISBN, BookDescription)
VALUES
	('horror', 10.20, '1234567886', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'),
	('romance', 11.30, '67893467849', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'),
	('sci-fi', 12.40, '6782346789', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'),
	('fiction', 13.50, '67346784905', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.');
    
SELECT * FROM BookTitles;

    
-- intermediate table 
-- link ONE copy of a book to ONE person
-- this will implement my many to many relationship between Persons and books
CREATE TABLE BookCopies (
	BookCopiesID int NOT NULL AUTO_INCREMENT,
	PersonID int, 
    BookID int
);


INSERT INTO BookCopies
	(PersonID, BookID)
VALUES
	(2,1),
	(2,2),
	(2,3),
	(2,4),
	(3,3),
	(3,4),
	(15,3),
	(15,4);
	
DESCRIBE BookCopies;
SELECT * FROM BookCopies;


-- A MANY to MANY relationship beween Persons and BookTitles via the BookCopies intermediate table 
SELECT Persons.FirstName, Persons.LastName, BookTitles.*
FROM Persons
-- the next two lines is a ONE to MANY relationship between the Persons and the BookCopies
INNER JOIN BookCopies
ON BookCopies.PersonID = Persons.PersonID
-- the next two lines is a ONE to MANY relationship between the BookTitles and the BookCopies
INNER JOIN BookTitles
ON BookTitles.BookID = BookCopies.BookID